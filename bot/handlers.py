from aiogram import types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from .fsm_states import AddUserDetails, Req_GPT
from gpt_integration.gpt import get_chatgpt_response
from database.db import add_user, get_user_data, save_taro_response
import logging
from .main import bot
# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
commands = {
    '–†–∞–∑–ª–æ–∂–∏—Ç—å –¢–ê–†–û': 'new_taro',
    '–ú–æ–∏ —Ä–∞—Å–∫–ª–∞–¥—ã': 'my_taro',
    '–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ': 'my_data',
    '–ü–æ–¥–ø–∏—Å–∫–∞': 'payment',
}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def start(id):
    user_exists = await add_user(id)
    buttons = [[InlineKeyboardButton(text=i, callback_data=commands[i])] for i in commands]
    inline_kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    tex = '''–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, –∏—Å–∫–∞—Ç–µ–ª–∏ –º—É–¥—Ä–æ—Å—Ç–∏! üåü
    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –¢–∞—Ä–æ-–±–æ—Ç!'''
    
    await bot.send_message(chat_id=id, text=tex, reply_markup=inline_kb)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /add
async def add(message, state):
    user_id = message.from_user.id
    user_data = await get_user_data(user_id)
    if not user_data:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è:")
        await state.set_state(AddUserDetails.waiting_for_name)
    else:
        await message.answer("–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")